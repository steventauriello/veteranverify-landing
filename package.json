import { createClient } from '@supabase/supabase-js'

const supabase = createClient(
  process.env.SUPABASE_URL,
  process.env.SUPABASE_SERVICE_KEY
)

export async function handler(event) {
  try {
    // Only accept POST requests
    if (event.httpMethod !== 'POST') {
      return {
        statusCode: 405,
        body: JSON.stringify({ error: 'Method not allowed' }),
      }
    }

    // Parse the incoming form data
    const formData = new URLSearchParams(event.body)
    const name = formData.get('name')
    const email = formData.get('email')
    const organization = formData.get('organization')
    const state = formData.get('state')
    const message = formData.get('message')
    const roles = formData.getAll('role[]') || []
    const updates = formData.get('updates') === 'yes'

    // Insert into Supabase
    const { error } = await supabase
      .from('signups')
      .insert([
        {
          name,
          email,
          organization,
          state,
          message,
          roles,
          updates,
          created_at: new Date().toISOString(),
        },
      ])

    if (error) {
      console.error('Supabase insert error:', error)
      return {
        statusCode: 500,
        body: JSON.stringify({ error: 'Database insert failed', details: error.message }),
      }
    }

    // Return success
    return {
      statusCode: 200,
      body: JSON.stringify({ message: 'Signup successful' }),
    }
  } catch (err) {
    console.error('Function error:', err)
    return {
      statusCode: 500,
      body: JSON.stringify({ error: 'Server error', details: err.message }),
    }
  }
}
